@using ServiceStack
@model IEnumerable<iteachart.Models.UserModel>

@{
    ViewBag.Title = "Profiles";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section scripts
{
    
<script type="text/javascript">
    $(function() {
        @{
            var jsModel = Newtonsoft.Json.JsonConvert.SerializeObject(Model);
            var depModel = Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.Deps);
        }
        function ProfilesViewModel() {
            var self = this
            var depDefault = 'All Deps'
            var depDefaultId = -1
            this.searchExpr = ko.observable('')
            this.currentDepId = ko.observable(depDefaultId)
            this.currentDep = ko.observable(depDefault)
            
            this.departmentsRaw = ko.observableArray(@Html.Raw(depModel))

            this.orderedDeps = ko.computed(function() {
                var dbDeps = self.departmentsRaw().sort(function(left, right) { return left.Name == right.Name ? 0 : (left.Name < right.Name ? -1 : 1) })
                
                dbDeps.unshift({Id: depDefaultId, Name: depDefault})
                return dbDeps
            })
            
            this.selectDep = function(item) {
                self.currentDep(item.Name)
                self.currentDepId(item.Id)
            }

            var model = @Html.Raw(jsModel)
            this.items = ko.observableArray(model)

            this.filteredItems =  ko.computed(function() {
                    var filter = self.searchExpr().toLowerCase();
                    if (filter || self.currentDepId() != depDefaultId) {
                        return ko.utils.arrayFilter(self.items(), function (item) {
                            return (!filter || item.FullName.toLowerCase().indexOf(filter.trim()) > -1) &&
                                (!(self.currentDepId() != depDefaultId) || item.DeptId == self.currentDepId());
                        });
                    } else {
                        return self.items();
                    }
            })
            
        }
        var vm = new ProfilesViewModel()
        var elem = $('#profiles').get(0)
        ko.applyBindings(vm, elem)

    })
</script>
}

<div id="profiles">
    <nav class="navbar navbar-default" role="navigation">
        <div class="container-fluid">
            <!-- Brand and toggle get grouped for better mobile display -->
@*            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand" href="#">Brand</a>
            </div>*@

            <!-- Collect the nav links, forms, and other content for toggling -->
            <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">

                 <ul class="nav navbar-nav">
                    <li class="dropdown">
                        <a href="#" class="dropdown-toggle" data-toggle="dropdown"><span data-bind="text: currentDep"></span><b class="caret"></b></a>
                        <ul class="dropdown-menu" data-bind="foreach: orderedDeps">
                            <li data-bind="click: $parent.selectDep"><a href="#"><span data-bind="text: Name"></span></a></li>
                        </ul>
                    </li>
                </ul>
                <div class="navbar-form navbar-left" role="search">
                    <div class="form-group">
                        <input type="text" class="form-control" data-bind="value: searchExpr" placeholder="Type to search...">
                    </div>
                </div>

            </div><!-- /.navbar-collapse -->
        </div><!-- /.container-fluid -->
    </nav>

    <div data-bind="foreach: filteredItems" class="row">
        <div class="col-sm-6 col-md-4">
            <div class="thumbnail" style="margin-bottom: 20px;">
                <img class="profile-poster" data-bind="attr: {src: Image}" alt=" ...">
                <div class="caption">
                    <h3 data-bind="text: FullName"><a data-bind="attr:{ href }"></a></h3>
                    <p>Department: <span data-bind="text: DeptName"></span></p>
                    <p>Position: <span data-bind="text: Position"></span></p>
                    <p><a data-bind="attr: { href: ProfileLink }" class="btn btn-primary" role="button">View Profile</a> <a href="#" class="btn btn-default" role="button">Button</a></p>
                </div>
            </div>
        </div>
    </div>
</div>
